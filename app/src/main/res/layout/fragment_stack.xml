<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#6F9A9999"
    tools:context="com.example.stackmap.stack">
    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        >

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="@drawable/card"
                android:backgroundTint="#6F9A9999"

                >

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_margin="10dp"

                    android:fontFamily="@font/basic"
                    android:text="Stacks Using Arrays"
                    android:textAlignment="center"
                    android:textAllCaps="true"
                    android:textColor="@color/white"
                    android:textSize="20dp">

                </TextView>

            </androidx.cardview.widget.CardView>


            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="@drawable/card"
                android:backgroundTint="#6F9A9999"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintStart_toStartOf="parent">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:layout_margin="10dp"
                    android:fontFamily="@font/basic"
                    android:text="A stack is a linear data structure that follows the Last-In-First-Out (LIFO) principle, where the last item added to the stack is the first item to be removed. A stack can be implemented using an array in C. Here's an example of how to implement a stack using an array in C:"
                    android:textAlignment="textStart"
                    android:textColor="@color/white"
                    android:textSize="20dp" />

            </androidx.cardview.widget.CardView>
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="300dp"
                android:paddingStart="10dp"
                android:paddingRight="10dp"
                android:src="@drawable/stack">

            </ImageView>

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"

                android:background="@color/black">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_margin="10dp"

                    android:fontFamily="@font/basic"
                    android:text="#define MAX_SIZE 100\n
typedef struct stack {\n
    int top;\n
    int data[MAX_SIZE];\n
}\n Stack;\n

void initialize(Stack *stack) {\n
    stack->top = -1;\n
}\n

int is_empty(Stack *stack) {\n
    return stack->top == -1;\n
}\n

int is_full(Stack *stack) {\n
    return stack->top == MAX_SIZE - 1;\n
}\n

void push(Stack *stack, int element) {\n
    if (is_full(stack)) {\n
        printf(“Stack overflow.“);\n
                return;\n
                }\n
                stack->top++;\n
    stack->data[stack->top] = element;\n
                }\n

                int pop(Stack *stack) {\n
                if (is_empty(stack)) {\n
                printf(“Stack underflow.“);\n
                return -1;\n
                }\n
   int element = stack->data[stack->top];\n
                stack->top--;\n
                return element;\n
                }\n

                void print_stack(Stack *stack) {\n
                if (is_empty(stack)) {\n
                printf(“Stack is empty.“);\n
                return;\n
                }\n
                printf(“Stack: “);\n
     for (int i = stack->top;\n i >= 0;\n i--) {\n
                printf(“%d “, stack->data[i]);\n
                }\n
                printf(“\n“);\n
                }\n

                int main() {\n
                Stack stack;\n
                initialize(stack);\n
                push(stack, 1);\n
                push(stack, 2);\n
                push(stack, 3);\n
                print_stack(stack);\n
                pop(stack);\n
                print_stack(stack);\n
                return 0;\n
                }\n"
                    android:textSize="20dp">

                </TextView>

            </androidx.cardview.widget.CardView>
            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="@drawable/card"
                android:backgroundTint="#6F9A9999"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintStart_toStartOf="parent">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:layout_margin="10dp"
                    android:fontFamily="@font/basic"
                    android:text="In this implementation, the stack is defined using a structure that contains a top variable and an array to hold the data. The initialize function sets the top variable to -1 to indicate that the stack is empty. The is_empty and is_full functions check if the stack is empty or full, respectively. The push function adds an element to the top of the stack, and the pop function removes and returns the element at the top of the stack. The print_stack function prints the elements in the stack from top to bottom.

Note that this implementation uses a fixed-size array, so it can only hold a maximum of MAX_SIZE elements. If you need a stack that can hold an arbitrary number of elements, you could use a dynamic array instead."
                    android:textAlignment="textStart"
                    android:textColor="@color/white"
                    android:textSize="20dp" />

            </androidx.cardview.widget.CardView>



        </LinearLayout>



    </ScrollView>





</FrameLayout>